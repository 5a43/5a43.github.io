<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>5a43's Blog</title><link>http://5a43.github.io/</link><description></description><atom:link href="http://5a43.github.io/feeds/5a43.rss.xml" rel="self"></atom:link><lastBuildDate>Sun, 19 Oct 2014 00:00:00 +0800</lastBuildDate><item><title>升级 OS X Yosemite 后 Pelican 无法运行的解决办法</title><link>http://5a43.github.io/sheng-ji-os-x-yosemite-hou-pelican-wu-fa-yun-xing-de-jie-jue-ban-fa.html</link><description>&lt;p&gt;升级完Yosemite以后，想写个Blog，结果写法用Pelican生成页面的时候，竟然提示无法找到six.moves.html_parser模块。pip list看了一下，six模块是存在的，于是卸载了重新装了一下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;uninstall&lt;/span&gt; &lt;span class="n"&gt;six&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;six&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后运行make html还是提示同样的错误，用pip list看six的版本已经升级到1.8.0了。但是进入Python的控制台，import six以后，看到six.__version__还是1.4.1。而且dir(six.moves)发现什么模块都没有。于是想是不是系统还有个six库。直接在控制台里面输入six显示出当前库的路径是&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Library&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Frameworks&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;framework&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Versions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;2.7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Extras&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;转到这个路径，把six有关的文件删除掉，再进入pelican目录运行make html一切正常。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">5a43</dc:creator><pubDate>Sun, 19 Oct 2014 00:00:00 +0800</pubDate><guid>tag:5a43.github.io,2014-10-19:sheng-ji-os-x-yosemite-hou-pelican-wu-fa-yun-xing-de-jie-jue-ban-fa.html</guid><category>Pelican</category><category>OS X</category><category>Yosemite</category></item><item><title>PyCharm 不能在 OS X Yosemite 运行问题解决办法</title><link>http://5a43.github.io/pycharm-bu-neng-zai-os-x-yosemite-yun-xing-wen-ti-jie-jue-ban-fa.html</link><description>&lt;p&gt;苹果正式发布了OS X 10.10 Yosemite以后，迫不及待的升级了。升级完成后绝大多数程序都可以运行，不过PyCharm运行不了，想必是没有安装java的缘故。于是打开iTerm输入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;java&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;提示说让直接去Oracle下载。从java.com下载了Java JDK 8以后安装，再运行PyCharm还是发现无法运行，竟然告诉我需要Java SE 6，这也太土了一些吧。经过请教Google找到解决办法。首先打开以下文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;vi&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Applications&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;PyCharm&lt;/span&gt; &lt;span class="n"&gt;CE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Contents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plist&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意我用的是社区免费版，壕们如果用的是收费版，路径略有不同。&lt;/p&gt;
&lt;p&gt;找到以下字串&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;1.6*&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;替换成下面的字符串&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;1.6+&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ESC :wq后，再启动PyCharm就能看到他正常运行了。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">5a43</dc:creator><pubDate>Sat, 18 Oct 2014 00:00:00 +0800</pubDate><guid>tag:5a43.github.io,2014-10-18:pycharm-bu-neng-zai-os-x-yosemite-yun-xing-wen-ti-jie-jue-ban-fa.html</guid><category>PyCharm</category><category>OS X</category><category>Yosemite</category></item><item><title>扫描 DNS 动态更新</title><link>http://5a43.github.io/sao-miao-dns-dong-tai-geng-xin.html</link><description>&lt;p&gt;由于一个客户的case，看了一下DNS动态更新。DNS Server可以支持记录的动态更新，比如Windows 2008 R2域服务器默认DNS Server都是给DNS动态更新配置为Secure Only模式。扫描的话可以先发一个Update的包给服务器，先添加一个记录，数据包里面域名弄的复杂一些以防搞乱服务器上原有的域名，记录类型就随便设置成A记录或者TXT都可以，然后把CLASS的值设置成1也就是IN。这样从服务器的返回数据中得RCODE就可以看出是否启用了动态更新，返回值对应如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;成功更新&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;没实现，也就是不支持动态更新&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;需要认证，也就是配置成&lt;/span&gt;&lt;span class="n"&gt;Secure&lt;/span&gt; &lt;span class="n"&gt;Only&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;随后，我们再发送一个类似的Update包，给CLASS设置成0xFF，Data设置成空就可以，发过去以后把刚才创建的域名删除掉即可。具体的协议可以参考 &lt;a href="http://tools.ietf.org/html/rfc1035" title="RFC 1035"&gt;RFC 1035&lt;/a&gt; 和 &lt;a href="http://tools.ietf.org/html/rfc2136" title="RFC 2136"&gt;RFC 2136&lt;/a&gt;。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">5a43</dc:creator><pubDate>Sat, 11 Oct 2014 00:00:00 +0800</pubDate><guid>tag:5a43.github.io,2014-10-11:sao-miao-dns-dong-tai-geng-xin.html</guid><category>DNS</category><category>Secure</category><category>Dynamic Update</category><category>Scan</category></item><item><title>TrueCrypt的替代品CipherShed</title><link>http://5a43.github.io/truecryptde-ti-dai-pin-ciphershed.html</link><description>&lt;p&gt;自从上次TrueCrypt发表官方声明说他的代码已经不再安全，我就开始直接使用OS X自带的加密映像功能了。但是唯一不方便的就是没法跨平台，万一以后又换回Windows的话很不方便，虽然这种几率很小，但是有一个能跨平台的软件还是要方便的多。估计有这种想法的人还不在少数，于是今天就看到有人Fork了TrueCrypt的代码，新弄了一个开源项目 &lt;a href="https://ciphershed.org" title="CipherShed"&gt;CipherShed&lt;/a&gt;。项目由于基于TrueCrypt，所以依旧支多平台，界面也和TrueCrypt没啥区别。不过要注意的就是开源并不代表代码安全，又有几个人会去仔细看看他的代码呢？&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">5a43</dc:creator><pubDate>Mon, 22 Sep 2014 00:00:00 +0800</pubDate><guid>tag:5a43.github.io,2014-09-22:truecryptde-ti-dai-pin-ciphershed.html</guid><category>TrueCrypt</category><category>Tools</category><category>CipherShed</category></item><item><title>MAC下用Pelican生成Github Pages可用站点</title><link>http://5a43.github.io/macxia-yong-pelicansheng-cheng-github-pageske-yong-zhan-dian.html</link><description>&lt;h1&gt;为什么使用Pelican&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;使用Github Pages服务托管要求是静态站点&lt;/li&gt;
&lt;li&gt;不想用基于Ruby的Jekyll&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;简单的步骤&lt;/h1&gt;
&lt;p&gt;1.安装&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2.设置可以按照&lt;a href="http://docs.getpelican.com/en/3.4.0/index.html" title="pelican"&gt;pelican&lt;/a&gt;文档里面写的quick start步骤，先生成一个站点。然后修改pelicanconf.py和publishconf.py，如果github的目录设置到output了，别忘了一定把DELETE_OUTPUT_DIRECTORY设置为False，否则.git在每次生成的时候都被删掉。各种设置可以参考&lt;a href="http://docs.getpelican.com/en/latest/settings.html" title="pelican setting"&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3.参考&lt;a href="http://docs.getpelican.com/en/3.4.0/index.html" title="pelican"&gt;pelican&lt;/a&gt;了解怎么组织content目录中得metadata数据&lt;/p&gt;
&lt;p&gt;4.生成&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;5.发布&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;6.以后如果想全自动发布到github pages的话，可以修改一下Makefile的github publish部分，如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OUTPUTDIR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;commit&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt; &lt;span class="n"&gt;origin&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;修改完成后以后每次就可以直接用 &lt;code&gt;make github&lt;/code&gt; 生成发布的站点并push到github了。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">5a43</dc:creator><pubDate>Fri, 05 Sep 2014 00:00:00 +0800</pubDate><guid>tag:5a43.github.io,2014-09-05:macxia-yong-pelicansheng-cheng-github-pageske-yong-zhan-dian.html</guid><category>pelican</category><category>GitHub Pages</category></item></channel></rss>