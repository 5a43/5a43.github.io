<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>5a43's Blog</title><link href="http://5a43.github.io/" rel="alternate"></link><link href="http://5a43.github.io/feeds/misc.atom.xml" rel="self"></link><id>http://5a43.github.io/</id><updated>2015-08-17T00:00:00+08:00</updated><entry><title>SSH Client 认证后卡死的问题</title><link href="http://5a43.github.io/ssh-client-ren-zheng-hou-qia-si-de-wen-ti.html" rel="alternate"></link><published>2015-08-17T00:00:00+08:00</published><updated>2015-08-17T00:00:00+08:00</updated><author><name>5a43</name></author><id>tag:5a43.github.io,2015-08-17:ssh-client-ren-zheng-hou-qia-si-de-wen-ti.html</id><summary type="html">&lt;p&gt;最近刚刚换了一台Netgear WNDR4300的路由器，以前的DIR-617退役了。但是换完后发现一个问题。每当在我的Mac里面用SSH登陆我内网的香蕉派时，总是在输入完密码后无法登陆，一直卡死在那里。于是加-vvv看来一下详细的输出，最后几行大概是如下内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;debug3&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Ignored&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;
&lt;span class="n"&gt;debug2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;channel&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt; &lt;span class="n"&gt;confirm&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;debug2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;callback&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;
&lt;span class="n"&gt;debug2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;channel&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt; &lt;span class="n"&gt;confirm&lt;/span&gt; &lt;span class="n"&gt;rwindow&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;rmax&lt;/span&gt; &lt;span class="mi"&gt;32768&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Google了一番后无果，基本上都是老外在讨论，没有什么国内的人讨论这个问题，但是老外们最终也没什么个好的解决办法。一番折腾后，最终发现了问题所在，每当我登陆不了的时候，都是由于我开着Windows的虚拟机呢，并且我的VMware虚拟机选用的是桥接方式连接。解决方法也很简单，直接把虚拟机的网卡改成NAT方式就可以了。由于之前DIR-617没有这样的问题，估计是路由器的缘故，改天有时间刷DD-WRT再试验一下。&lt;/p&gt;</summary><category term="SSH"></category><category term="VMware"></category></entry><entry><title>MAC下用Pelican生成Github Pages可用站点</title><link href="http://5a43.github.io/macxia-yong-pelicansheng-cheng-github-pageske-yong-zhan-dian.html" rel="alternate"></link><published>2014-09-05T00:00:00+08:00</published><updated>2014-09-05T00:00:00+08:00</updated><author><name>5a43</name></author><id>tag:5a43.github.io,2014-09-05:macxia-yong-pelicansheng-cheng-github-pageske-yong-zhan-dian.html</id><summary type="html">&lt;h1&gt;为什么使用Pelican&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;使用Github Pages服务托管要求是静态站点&lt;/li&gt;
&lt;li&gt;不想用基于Ruby的Jekyll&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;简单的步骤&lt;/h1&gt;
&lt;p&gt;1.安装&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pip install pelican, markdown
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2.设置可以按照&lt;a href="http://docs.getpelican.com/en/3.4.0/index.html" title="pelican"&gt;pelican&lt;/a&gt;文档里面写的quick start步骤，先生成一个站点。然后修改pelicanconf.py和publishconf.py，如果github的目录设置到output了，别忘了一定把DELETE_OUTPUT_DIRECTORY设置为False，否则.git在每次生成的时候都被删掉。各种设置可以参考&lt;a href="http://docs.getpelican.com/en/latest/settings.html" title="pelican setting"&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3.参考&lt;a href="http://docs.getpelican.com/en/3.4.0/index.html" title="pelican"&gt;pelican&lt;/a&gt;了解怎么组织content目录中得metadata数据&lt;/p&gt;
&lt;p&gt;4.生成&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;make html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;5.发布&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;make publish
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;6.以后如果想全自动发布到github pages的话，可以修改一下Makefile的github publish部分，如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;cd&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;OUTPUTDIR&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="err"&gt;git&lt;/span&gt; &lt;span class="err"&gt;add&lt;/span&gt; &lt;span class="err"&gt;.&lt;/span&gt; &lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="err"&gt;git&lt;/span&gt; &lt;span class="err"&gt;commit&lt;/span&gt; &lt;span class="err"&gt;-m&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;commit&amp;#39;&lt;/span&gt; &lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="err"&gt;git&lt;/span&gt; &lt;span class="err"&gt;push&lt;/span&gt; &lt;span class="err"&gt;origin&lt;/span&gt; &lt;span class="err"&gt;master&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;修改完成后以后每次就可以直接用 &lt;code&gt;make github&lt;/code&gt; 生成发布的站点并push到github了。&lt;/p&gt;</summary><category term="pelican"></category><category term="GitHub Pages"></category></entry></feed>